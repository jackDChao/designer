/*! svg.draw.js - v2.0.4 - 2020-04-25
* https://github.com/svgdotjs/svg.draw.js
* Copyright (c) 2020 Ulrich-Matthias Sch√§fer; Licensed MIT */

(function(){"use strict";function n(t,i,s){(this.el=t).remember("_paintHandler",this);var e=this,n=this.getPlugin();for(var r in this.parent=t.parent(SVG.Nested)||t.parent(SVG.Doc),this.p=new SVG.Point(this.parent.node.createSVGPoint()),this.m,this.startPoint,this.lastUpdateCall,this.offset={x:0,y:0},this.options={},this.set=new SVG.Set,this.el.draw.defaults)this.options[r]=this.el.draw.defaults[r],void 0!==s[r]&&(this.options[r]=s[r]);for(var o in n.point&&(n.pointPlugin=n.point,delete n.point),n)this[o]=n[o];i||this.parent.on("click.draw",function(t){e.start(t)})}n.prototype.transformPoint=function(t,i){return this.p.x=t-(this.offset.x-window.pageXOffset),this.p.y=i-(this.offset.y-window.pageYOffset),this.p.transform(this.m)},n.prototype.start=function(t){var i=this;this.m=this.el.screenCTM().inverse(),this.offset={x:window.pageXOffset,y:window.pageYOffset},this.options.snapToGrid*=Math.sqrt(this.m.a*this.m.a+this.m.b*this.m.b),this.startPoint=this.snapToGrid(this.transformPoint(t.clientX,t.clientY)),this.init&&this.init(t),this.el.fire("drawstart",{event:t,p:this.p,m:this.m}),SVG.on(window,"mousemove.draw",function(t){i.update(t)}),this.start=this.point},n.prototype.point=function(t){return this.point!==this.start?this.start(t):this.pointPlugin?this.pointPlugin(t):void this.stop(t)},n.prototype.stop=function(t){t&&this.update(t),this.clean&&this.clean(),SVG.off(window,"mousemove.draw"),this.parent.off("click.draw"),this.el.forget("_paintHandler"),this.el.draw=function(){},this.el.fire("drawstop")},n.prototype.update=function(t){!t&&this.lastUpdateCall&&(t=this.lastUpdateCall),this.lastUpdateCall=t,this.offset={x:window.pageXOffset,y:window.pageYOffset},this.m=this.el.screenCTM().inverse(),this.calc(t),this.el.fire("drawupdate",{event:t,p:this.p,m:this.m})},n.prototype.done=function(){this.calc(),this.stop(),this.el.fire("drawdone")},n.prototype.cancel=function(){this.stop(),this.el.remove(),this.el.fire("drawcancel")},n.prototype.snapToGrid=function(t){var i=null;if(t.length)return i=[t[0]%this.options.snapToGrid,t[1]%this.options.snapToGrid],t[0]-=i[0]<this.options.snapToGrid/2?i[0]:i[0]-this.options.snapToGrid,t[1]-=i[1]<this.options.snapToGrid/2?i[1]:i[1]-this.options.snapToGrid,t;for(var s in t)i=t[s]%this.options.snapToGrid,t[s]-=(i<this.options.snapToGrid/2?i:i-this.options.snapToGrid)+(i<0?this.options.snapToGrid:0);return t},n.prototype.param=function(t,i){this.options[t]=null===i?this.el.draw.defaults[t]:i,this.update()},n.prototype.getPlugin=function(){return this.el.draw.plugins[this.el.type]},SVG.extend(SVG.Element,{draw:function(t,i,s){t instanceof Event||"string"==typeof t||(i=t,t=null);var e=this.remember("_paintHandler")||new n(this,t,i||{});return t instanceof Event&&e.start(t),e[t]&&e[t](i,s),this}}),SVG.Element.prototype.draw.defaults={snapToGrid:1},SVG.Element.prototype.draw.extend=function(t,i){var s={};for(var e in"string"==typeof t?s[t]=i:s=t,s){var n=e.trim().split(/\s+/);for(var r in n)SVG.Element.prototype.draw.plugins[n[r]]=s[e]}},SVG.Element.prototype.draw.plugins={},SVG.Element.prototype.draw.extend("rect image",{init:function(){var t=this.startPoint;this.el.attr({x:t.x,y:t.y,height:0,width:0})},calc:function(t){var i=this.transformPoint(t.clientX,t.clientY),s={x:this.startPoint.x,y:this.startPoint.y};s.width=i.x-s.x,s.height=i.y-s.y,this.snapToGrid(s),s.width<0&&(s.x=s.x+s.width,s.width=-s.width),s.height<0&&(s.y=s.y+s.height,s.height=-s.height),this.el.attr(s)}}),SVG.Element.prototype.draw.extend("line polyline polygon",{init:function(){this.set=new SVG.Set;var t=this.startPoint,i=[[t.x,t.y],[t.x,t.y]];this.el.plot(i),this.drawCircles()},calc:function(t){var i=this.el.array().valueOf();if(i.pop(),t){var s=this.transformPoint(t.clientX,t.clientY);i.push(this.snapToGrid([s.x,s.y]))}this.el.plot(i),this.drawCircles()},point:function(t){if(-1<this.el.type.indexOf("poly")){var i=this.transformPoint(t.clientX,t.clientY),s=this.el.array().valueOf();return s.push(this.snapToGrid([i.x,i.y])),this.el.plot(s),this.drawCircles(),void this.el.fire("drawpoint",{event:t,p:i,m:this.m})}this.stop(t)},clean:function(){this.set.each(function(){this.remove()}),this.set.clear(),delete this.set},drawCircles:function(){var t=this.el.array().valueOf();this.set.each(function(){this.remove()}),this.set.clear();for(var i=0;i<t.length;++i){this.p.x=t[i][0],this.p.y=t[i][1];var s=this.p.transform(this.parent.screenCTM().inverse().multiply(this.el.screenCTM()));this.set.add(this.parent.circle(5).stroke({width:1}).fill("#ccc").center(s.x,s.y))}},undo:function(){this.set.length()&&(this.set.members.splice(-2,1)[0].remove(),this.el.array().value.splice(-2,1),this.el.plot(this.el.array()),this.el.fire("undopoint"))}}),SVG.Element.prototype.draw.extend("circle",{init:function(){var t=this.startPoint;this.el.attr({cx:t.x,cy:t.y,r:1})},calc:function(t){var i=this.transformPoint(t.clientX,t.clientY),s={cx:this.startPoint.x,cy:this.startPoint.y,r:Math.sqrt((i.x-this.startPoint.x)*(i.x-this.startPoint.x)+(i.y-this.startPoint.y)*(i.y-this.startPoint.y))};this.snapToGrid(s),this.el.attr(s)}}),SVG.Element.prototype.draw.extend("ellipse",{init:function(){var t=this.startPoint;this.el.attr({cx:t.x,cy:t.y,rx:1,ry:1})},calc:function(t){var i=this.transformPoint(t.clientX,t.clientY),s={cx:this.startPoint.x,cy:this.startPoint.y,rx:Math.abs(i.x-this.startPoint.x),ry:Math.abs(i.y-this.startPoint.y)};this.snapToGrid(s),this.el.attr(s)}})}).call(this);